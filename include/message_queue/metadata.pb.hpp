// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metadata.proto

#ifndef PROTOBUF_metadata_2eproto__INCLUDED
#define PROTOBUF_metadata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_metadata_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMetadataItemImpl();
void InitDefaultsMetadataItem();
void InitDefaultsMetadataImpl();
void InitDefaultsMetadata();
inline void InitDefaults() {
  InitDefaultsMetadataItem();
  InitDefaultsMetadata();
}
}  // namespace protobuf_metadata_2eproto
class Metadata;
class MetadataDefaultTypeInternal;
extern MetadataDefaultTypeInternal _Metadata_default_instance_;
class MetadataItem;
class MetadataItemDefaultTypeInternal;
extern MetadataItemDefaultTypeInternal _MetadataItem_default_instance_;

// ===================================================================

class MetadataItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataItem) */ {
 public:
  MetadataItem();
  virtual ~MetadataItem();

  MetadataItem(const MetadataItem& from);

  inline MetadataItem& operator=(const MetadataItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MetadataItem(MetadataItem&& from) noexcept
    : MetadataItem() {
    *this = ::std::move(from);
  }

  inline MetadataItem& operator=(MetadataItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataItem& default_instance();

  enum ValueCase {
    kBoolValue = 2,
    kIntValue = 3,
    kFloatValue = 4,
    kStringValue = 5,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MetadataItem* internal_default_instance() {
    return reinterpret_cast<const MetadataItem*>(
               &_MetadataItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MetadataItem* other);
  friend void swap(MetadataItem& a, MetadataItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MetadataItem* New() const PROTOBUF_FINAL { return New(NULL); }

  MetadataItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MetadataItem& from);
  void MergeFrom(const MetadataItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MetadataItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // bool bool_value = 2;
  private:
  bool has_bool_value() const;
  public:
  void clear_bool_value();
  static const int kBoolValueFieldNumber = 2;
  bool bool_value() const;
  void set_bool_value(bool value);

  // int32 int_value = 3;
  private:
  bool has_int_value() const;
  public:
  void clear_int_value();
  static const int kIntValueFieldNumber = 3;
  ::google::protobuf::int32 int_value() const;
  void set_int_value(::google::protobuf::int32 value);

  // float float_value = 4;
  private:
  bool has_float_value() const;
  public:
  void clear_float_value();
  static const int kFloatValueFieldNumber = 4;
  float float_value() const;
  void set_float_value(float value);

  // string string_value = 5;
  private:
  bool has_string_value() const;
  public:
  void clear_string_value();
  static const int kStringValueFieldNumber = 5;
  const ::std::string& string_value() const;
  void set_string_value(const ::std::string& value);
  #if LANG_CXX11
  void set_string_value(::std::string&& value);
  #endif
  void set_string_value(const char* value);
  void set_string_value(const char* value, size_t size);
  ::std::string* mutable_string_value();
  ::std::string* release_string_value();
  void set_allocated_string_value(::std::string* string_value);

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:MetadataItem)
 private:
  void set_has_bool_value();
  void set_has_int_value();
  void set_has_float_value();
  void set_has_string_value();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  union ValueUnion {
    ValueUnion() {}
    bool bool_value_;
    ::google::protobuf::int32 int_value_;
    float float_value_;
    ::google::protobuf::internal::ArenaStringPtr string_value_;
  } value_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_metadata_2eproto::TableStruct;
  friend void ::protobuf_metadata_2eproto::InitDefaultsMetadataItemImpl();
};
// -------------------------------------------------------------------

class Metadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Metadata) */ {
 public:
  Metadata();
  virtual ~Metadata();

  Metadata(const Metadata& from);

  inline Metadata& operator=(const Metadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Metadata(Metadata&& from) noexcept
    : Metadata() {
    *this = ::std::move(from);
  }

  inline Metadata& operator=(Metadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Metadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Metadata* internal_default_instance() {
    return reinterpret_cast<const Metadata*>(
               &_Metadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Metadata* other);
  friend void swap(Metadata& a, Metadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Metadata* New() const PROTOBUF_FINAL { return New(NULL); }

  Metadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Metadata& from);
  void MergeFrom(const Metadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Metadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MetadataItem items = 8;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 8;
  const ::MetadataItem& items(int index) const;
  ::MetadataItem* mutable_items(int index);
  ::MetadataItem* add_items();
  ::google::protobuf::RepeatedPtrField< ::MetadataItem >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::MetadataItem >&
      items() const;

  // string camera = 7;
  void clear_camera();
  static const int kCameraFieldNumber = 7;
  const ::std::string& camera() const;
  void set_camera(const ::std::string& value);
  #if LANG_CXX11
  void set_camera(::std::string&& value);
  #endif
  void set_camera(const char* value);
  void set_camera(const char* value, size_t size);
  ::std::string* mutable_camera();
  ::std::string* release_camera();
  void set_allocated_camera(::std::string* camera);

  // int32 size = 1;
  void clear_size();
  static const int kSizeFieldNumber = 1;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // int32 height = 2;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // int32 width = 3;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // int32 channels = 4;
  void clear_channels();
  static const int kChannelsFieldNumber = 4;
  ::google::protobuf::int32 channels() const;
  void set_channels(::google::protobuf::int32 value);

  // int32 timestamp = 5;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 5;
  ::google::protobuf::int32 timestamp() const;
  void set_timestamp(::google::protobuf::int32 value);

  // int32 bits_pixel = 6;
  void clear_bits_pixel();
  static const int kBitsPixelFieldNumber = 6;
  ::google::protobuf::int32 bits_pixel() const;
  void set_bits_pixel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Metadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::MetadataItem > items_;
  ::google::protobuf::internal::ArenaStringPtr camera_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 channels_;
  ::google::protobuf::int32 timestamp_;
  ::google::protobuf::int32 bits_pixel_;
  mutable int _cached_size_;
  friend struct ::protobuf_metadata_2eproto::TableStruct;
  friend void ::protobuf_metadata_2eproto::InitDefaultsMetadataImpl();
};
// ===================================================================


// ===================================================================

#if __GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6)
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MetadataItem

// string key = 1;
inline void MetadataItem::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MetadataItem::key() const {
  // @@protoc_insertion_point(field_get:MetadataItem.key)
  return key_.GetNoArena();
}
inline void MetadataItem::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataItem.key)
}
#if LANG_CXX11
inline void MetadataItem::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MetadataItem.key)
}
#endif
inline void MetadataItem::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataItem.key)
}
inline void MetadataItem::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataItem.key)
}
inline ::std::string* MetadataItem::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:MetadataItem.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetadataItem::release_key() {
  // @@protoc_insertion_point(field_release:MetadataItem.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataItem::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:MetadataItem.key)
}

// bool bool_value = 2;
inline bool MetadataItem::has_bool_value() const {
  return value_case() == kBoolValue;
}
inline void MetadataItem::set_has_bool_value() {
  _oneof_case_[0] = kBoolValue;
}
inline void MetadataItem::clear_bool_value() {
  if (has_bool_value()) {
    value_.bool_value_ = false;
    clear_has_value();
  }
}
inline bool MetadataItem::bool_value() const {
  // @@protoc_insertion_point(field_get:MetadataItem.bool_value)
  if (has_bool_value()) {
    return value_.bool_value_;
  }
  return false;
}
inline void MetadataItem::set_bool_value(bool value) {
  if (!has_bool_value()) {
    clear_value();
    set_has_bool_value();
  }
  value_.bool_value_ = value;
  // @@protoc_insertion_point(field_set:MetadataItem.bool_value)
}

// int32 int_value = 3;
inline bool MetadataItem::has_int_value() const {
  return value_case() == kIntValue;
}
inline void MetadataItem::set_has_int_value() {
  _oneof_case_[0] = kIntValue;
}
inline void MetadataItem::clear_int_value() {
  if (has_int_value()) {
    value_.int_value_ = 0;
    clear_has_value();
  }
}
inline ::google::protobuf::int32 MetadataItem::int_value() const {
  // @@protoc_insertion_point(field_get:MetadataItem.int_value)
  if (has_int_value()) {
    return value_.int_value_;
  }
  return 0;
}
inline void MetadataItem::set_int_value(::google::protobuf::int32 value) {
  if (!has_int_value()) {
    clear_value();
    set_has_int_value();
  }
  value_.int_value_ = value;
  // @@protoc_insertion_point(field_set:MetadataItem.int_value)
}

// float float_value = 4;
inline bool MetadataItem::has_float_value() const {
  return value_case() == kFloatValue;
}
inline void MetadataItem::set_has_float_value() {
  _oneof_case_[0] = kFloatValue;
}
inline void MetadataItem::clear_float_value() {
  if (has_float_value()) {
    value_.float_value_ = 0;
    clear_has_value();
  }
}
inline float MetadataItem::float_value() const {
  // @@protoc_insertion_point(field_get:MetadataItem.float_value)
  if (has_float_value()) {
    return value_.float_value_;
  }
  return 0;
}
inline void MetadataItem::set_float_value(float value) {
  if (!has_float_value()) {
    clear_value();
    set_has_float_value();
  }
  value_.float_value_ = value;
  // @@protoc_insertion_point(field_set:MetadataItem.float_value)
}

// string string_value = 5;
inline bool MetadataItem::has_string_value() const {
  return value_case() == kStringValue;
}
inline void MetadataItem::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline void MetadataItem::clear_string_value() {
  if (has_string_value()) {
    value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& MetadataItem::string_value() const {
  // @@protoc_insertion_point(field_get:MetadataItem.string_value)
  if (has_string_value()) {
    return value_.string_value_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void MetadataItem::set_string_value(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MetadataItem.string_value)
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataItem.string_value)
}
#if LANG_CXX11
inline void MetadataItem::set_string_value(::std::string&& value) {
  // @@protoc_insertion_point(field_set:MetadataItem.string_value)
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MetadataItem.string_value)
}
#endif
inline void MetadataItem::set_string_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataItem.string_value)
}
inline void MetadataItem::set_string_value(const char* value, size_t size) {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataItem.string_value)
}
inline ::std::string* MetadataItem::mutable_string_value() {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:MetadataItem.string_value)
  return value_.string_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetadataItem::release_string_value() {
  // @@protoc_insertion_point(field_release:MetadataItem.string_value)
  if (has_string_value()) {
    clear_has_value();
    return value_.string_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void MetadataItem::set_allocated_string_value(::std::string* string_value) {
  if (!has_string_value()) {
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (string_value != NULL) {
    set_has_string_value();
    value_.string_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        string_value);
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataItem.string_value)
}

inline bool MetadataItem::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void MetadataItem::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline MetadataItem::ValueCase MetadataItem::value_case() const {
  return MetadataItem::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Metadata

// int32 size = 1;
inline void Metadata::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 Metadata::size() const {
  // @@protoc_insertion_point(field_get:Metadata.size)
  return size_;
}
inline void Metadata::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:Metadata.size)
}

// int32 height = 2;
inline void Metadata::clear_height() {
  height_ = 0;
}
inline ::google::protobuf::int32 Metadata::height() const {
  // @@protoc_insertion_point(field_get:Metadata.height)
  return height_;
}
inline void Metadata::set_height(::google::protobuf::int32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:Metadata.height)
}

// int32 width = 3;
inline void Metadata::clear_width() {
  width_ = 0;
}
inline ::google::protobuf::int32 Metadata::width() const {
  // @@protoc_insertion_point(field_get:Metadata.width)
  return width_;
}
inline void Metadata::set_width(::google::protobuf::int32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:Metadata.width)
}

// int32 channels = 4;
inline void Metadata::clear_channels() {
  channels_ = 0;
}
inline ::google::protobuf::int32 Metadata::channels() const {
  // @@protoc_insertion_point(field_get:Metadata.channels)
  return channels_;
}
inline void Metadata::set_channels(::google::protobuf::int32 value) {
  
  channels_ = value;
  // @@protoc_insertion_point(field_set:Metadata.channels)
}

// int32 timestamp = 5;
inline void Metadata::clear_timestamp() {
  timestamp_ = 0;
}
inline ::google::protobuf::int32 Metadata::timestamp() const {
  // @@protoc_insertion_point(field_get:Metadata.timestamp)
  return timestamp_;
}
inline void Metadata::set_timestamp(::google::protobuf::int32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:Metadata.timestamp)
}

// int32 bits_pixel = 6;
inline void Metadata::clear_bits_pixel() {
  bits_pixel_ = 0;
}
inline ::google::protobuf::int32 Metadata::bits_pixel() const {
  // @@protoc_insertion_point(field_get:Metadata.bits_pixel)
  return bits_pixel_;
}
inline void Metadata::set_bits_pixel(::google::protobuf::int32 value) {
  
  bits_pixel_ = value;
  // @@protoc_insertion_point(field_set:Metadata.bits_pixel)
}

// string camera = 7;
inline void Metadata::clear_camera() {
  camera_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Metadata::camera() const {
  // @@protoc_insertion_point(field_get:Metadata.camera)
  return camera_.GetNoArena();
}
inline void Metadata::set_camera(const ::std::string& value) {
  
  camera_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Metadata.camera)
}
#if LANG_CXX11
inline void Metadata::set_camera(::std::string&& value) {
  
  camera_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Metadata.camera)
}
#endif
inline void Metadata::set_camera(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  camera_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Metadata.camera)
}
inline void Metadata::set_camera(const char* value, size_t size) {
  
  camera_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Metadata.camera)
}
inline ::std::string* Metadata::mutable_camera() {
  
  // @@protoc_insertion_point(field_mutable:Metadata.camera)
  return camera_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Metadata::release_camera() {
  // @@protoc_insertion_point(field_release:Metadata.camera)
  
  return camera_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Metadata::set_allocated_camera(::std::string* camera) {
  if (camera != NULL) {
    
  } else {
    
  }
  camera_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), camera);
  // @@protoc_insertion_point(field_set_allocated:Metadata.camera)
}

// repeated .MetadataItem items = 8;
inline int Metadata::items_size() const {
  return items_.size();
}
inline void Metadata::clear_items() {
  items_.Clear();
}
inline const ::MetadataItem& Metadata::items(int index) const {
  // @@protoc_insertion_point(field_get:Metadata.items)
  return items_.Get(index);
}
inline ::MetadataItem* Metadata::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Metadata.items)
  return items_.Mutable(index);
}
inline ::MetadataItem* Metadata::add_items() {
  // @@protoc_insertion_point(field_add:Metadata.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MetadataItem >*
Metadata::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Metadata.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MetadataItem >&
Metadata::items() const {
  // @@protoc_insertion_point(field_list:Metadata.items)
  return items_;
}

#if __GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6)
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_metadata_2eproto__INCLUDED
